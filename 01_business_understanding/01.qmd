---
title: "business understanding"
author: "JP"
format: html
jupyter: python3
editor: 
  markdown: 
    wrap: 72
---

BUSINESS SCIENCE UNIVERSITY COURSE: DS4B 201-P PYTHON MACHINE LEARNING
MODULE 1: BUSINESS UNDERSTANDING ---- LIBRARIES ---- BUSINESS SCIENCE
PROBLEM FRAMEWORK ---- View Business as a Machine ---- Business Units: -
Marketing Department - Responsible for sales emails\
Project Objectives: - Target Subscribers Likely To Purchase - Nurture
Subscribers to take actions that are known to increase probability of
purchase Define Machine: - Marketing sends out email blasts to
everyone - Generates Sales - Also ticks some members off - Members
unsubscribe, this reduces email growth and profitability Collect
Outcomes: - Revenue has slowed, Email growth has slowed Understand the
Drivers ---- - Key Insights: - Company has Large Email List: 100,000 -
Email list is growing at 6,000/month less 2500 unsub for total of 3500 -
High unsubscribe rates: 500 people per sales email - Revenue: - Company
sales cycle is generating about \$250,000 per month - Average Customer
Lifetime Value: Estimate \$2000/customer - Costs: - Marketing sends 5
Sales Emails Per Month - 5% of lost customers likely to convert if
nutured 
TODO: think life

# COLLECT OUTCOMES ----

```{python}
import pandas as pd
import numpy as np
import janitor as jn
import plotly.express as px

```

## parameters


# funs

```{python}

def cost_tbl(
        email_list_size=1e5,
        email_list_growth_rate=0.035,
        emails_per_month=500,
        sales_emails=5,
        unsub_rate=0.005,
        conversion_rate=0.05,
        customer_value=2000,
        periods = 12
):
  
  
    period_series = pd.Series(np.arange(0, periods), name="period")
    df = period_series.to_frame()

    df["email_no_growth"] = np.repeat(email_list_size, periods)
    
    df["lost_customers_no_growth"] = df["email_no_growth"] * unsub_rate*emails_per_month * conversion_rate

    df["cost_no_grown"] = df["lost_customers_no_growth"] * customer_value  # value of customers that are lost

    df["emails_with_growth"] = df["email_no_growth"] * ((1 + email_list_growth_rate) ** df["period"])
    
    df['lost_customers_with_growth'] = df['emails_with_growth'] * unsub_rate * emails_per_month * conversion_rate
    df['cost_with_growth'] = df['lost_customers_with_growth'] * customer_value

    return df

def cost_summary(cost_df: pd.DataFrame):
  summary_df = cost_df[["cost_no_grown", 'cost_with_growth']].sum()\
  .to_frame().transpose()
    
  return summary_df

```


```{python}
df = cost_tbl()
df
cost_summary(df)

```




```{python}
# compare cost
df[["cost_no_grown", 'cost_with_growth']].sum()
df[['cost_no_grown']].sum() * .3
df[['cost_with_growth']].sum() * .3
df
```




```{python}
def simulate_cost(
  email_growth_rate = [0,2,3],
  conversion = [0.003, 0.006, 0.010],
  **kwargs):
    d = { 'email_gth_rate':  email_growth_rate,
    'convertion_rate':  conversion}

    out = pd.MultiIndex.from_product(d.values(),names=d.keys()).to_frame().reset_index(drop=True)
    
    def temp_func2(x,y):
      cost_df = cost_tbl(
        email_list_growth_rate=x,
        conversion_rate=y, **kwargs
        )
      
      summary_df = cost_summary(cost_df)
      return summary_df
    
    summary_list =[temp_func2(x,y) for x,y in zip( out['email_gth_rate'],  out['convertion_rate'])]

    summary_params = pd.concat(summary_list, axis = 0).reset_index()\
    .drop('index', axis = 1).merge(out, left_index=True, right_index=True)



    return summary_params


res = simulate_cost(
  email_growth_rate = [0.01,0.08], 
  conversion = [0.03, 0.05], 
  email_list_size = 100000
  )
res

```

# VISUALIZE COSTS

# Function: Plot Simulated Unsubscriber Costs

```{python}

def plot_simulations(res:pd.DataFrame = res):

  res_ims = res.drop('cost_no_grown', axis=1)\
  .pivot(
    index = 'email_gth_rate',
    columns = 'convertion_rate',
    values = 'cost_with_growth')
      
  fig = px.imshow(
    res_ims, origin='lower',
    aspect='auto',
    title = 'Cost simulation')

  return fig


plot_simulations()

```

```{python}

```


# ARE OBJECTIVES BEING MET?

# - Even with simulation, we see high costs

# - What if we could reduce by 30% through better targeting?

# - What if we could reduce unsubscribe rate from 0.5% to 0.17% (marketing average)?

# - Source: https://www.campaignmonitor.com/resources/knowledge-base/what-is-a-good-unsubscribe-rate/

# HYPOTHESIZE DRIVERS

# - What causes a customer to convert of drop off?

# - If we know what makes them likely to convert, we can target the ones that are unlikely to nurture them (instead of sending sales emails)

# - Meet with Marketing Team

# - Notice increases in sales after webinars (called Learning Labs)

# - Next: Begin Data Collection and Understanding
